name: CI/CD to ECS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: ecr-login
      uses: aws-actions/amazon-ecr-login@v2
      with:
        registry-ids: ${{ secrets.AWS_ACCOUNT_ID }}

    - name: Build Docker image
      run: |
        docker build -t fahadakash/testing .

    - name: Tag Docker image
      run: |
        docker tag fahadakash/testing:latest ${{ secrets.ECR_REGISTRY }}/fahadakash/testing:latest
        # Also create timestamp tag
        IMAGE_TAG=$(date +%Y%m%d%H%M%S)
        docker tag fahadakash/testing:latest ${{ secrets.ECR_REGISTRY }}/fahadakash/testing:$IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Push Docker images
      run: |
        docker push ${{ secrets.ECR_REGISTRY }}/fahadakash/testing:latest
        docker push ${{ secrets.ECR_REGISTRY }}/fahadakash/testing:${{ env.IMAGE_TAG }}

    - name: Deploy to ECS
      run: |
        aws ecs update-service \
          --cluster ${{ secrets.ECS_CLUSTER }} \
          --service ${{ secrets.ECS_SERVICE }} \
          --force-new-deployment